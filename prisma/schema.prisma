generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "mysql"
  url       = env("DATABASE_URL")
}


model category {
  id        Int        @id @default(autoincrement())
  name      String
  slug      String     @unique(map: "Category_slug_key")
  image     String    @db.VarChar(255)
  parentId  Int?
  parent    category?  @relation("CategoryToChildren", fields: [parentId], references: [id])
  children  category[] @relation("CategoryToChildren")
  level     Int        @default(0) // cấp độ: 0 là gốc, 1 là con, 2 là cháu...
  product   product[]
  description String?    @db.Text    // mô tả danh mục

  @@index([parentId])
  @@index([level])
}

model product {
  id            Int      @id @default(autoincrement())
  name          String
  slug          String   @unique(map: "Product_slug_key")
  image         String
  price         Int
  brand         String
  rating        Float
  reviews       Int
  categoryId    Int
  attributes    Json?
  badges        Json?
  createdAt     DateTime @default(now())
  description   String?  @db.LongText
  gallery       Json?
  originalPrice Int?
  updatedAt     DateTime @updatedAt
  category      category @relation(fields: [categoryId], references: [id], map: "Product_categoryId_fkey")
  status        ProductStatus   @default(Published)

  @@index([categoryId], map: "Product_categoryId_fkey")
}




// Thêm model News mới vào đây
model News {
  id          Int      @id @default(autoincrement())
  title       String   @db.VarChar(255)
  slug        String   @unique
  image       String   @db.VarChar(255)
  summary     String   @db.Text
  content     String   @db.LongText // Dùng LongText nếu nội dung bài viết dài
  date        DateTime @default(now()) // Ngày đăng bài
  category    String   @db.VarChar(100) // Tên danh mục (có thể link sang bảng Category nếu muốn chuẩn hóa)
  isFeatured  Boolean  @default(false) // Bài viết nổi bật
  views       Int      @default(0)     // Số lượt xem
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  status      NewsStatus @default(Published)

  @@index([category])
  @@index([date])
  @@index([isFeatured])
}

model Order {
  id         String      @id @default(cuid())
  name       String
  phone      String
  address    String
  note       String?
  total      Int
  status     OrderStatus @default(pending)
  createdAt  DateTime    @default(now())
  paymentStatus PaymentStatus @default(pending)
  items      OrderItem[]
}

model OrderItem {
  id        String   @id @default(cuid())
  order     Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId   String
  productId Int
  name      String
  image     String?
  quantity  Int
  price     Int
}

enum OrderStatus {
  pending
  processing
  shipped
  delivered
  cancelled
}

enum PaymentStatus {
  pending
  paid
  failed
}

enum ProductStatus {
  Published
  Draft
  Archived
}

enum NewsStatus {
  Draft
  Pending
  Published
  Archived
}